## -*- mode:ulam -*-
#=t3254_test_compiler_typedefarray_changesize_error
#!
##
##      //./B.ulam:8:16: ERROR: Arraysize [] is included in typedef: <IndArr>, and cannot be redefined by typedef: <IArray>.
##      //./B.ulam:8:16: ERROR: Invalid typedef of base type: <Unsigned> and Name: <IArray> (missing symbol).
##
Ue_B { Bool(7) b(false);  System s();  typedef Unsigned(8) Index;  typedef Unsigned(8) NIdx;  typedef Unsigned(8) IndArr[4];  typedef Unsigned(8)[4] IArray[2] /* INVALID */;  IArray(8) arr[4](1,0,0,0);  Int(32) test() {  arr 0 [] 1 cast = arr 0 [] cast 0 cast == cast return } }
Exit status:
##
##      // with renames of typedefs, and arrays based on typedef
##      // can't resize an array typedef
##
#>B.ulam
use System;
element B {
System s;
Bool(7) b;
typedef Unsigned(8) Index;
typedef Index NIdx;
typedef NIdx IndArr[4];
typedef IndArr IArray[2];
 IArray arr;
 Int test(){ arr[0] = 1;
 return arr[0] == 0;
 }
 }

#:System.ulam
ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
