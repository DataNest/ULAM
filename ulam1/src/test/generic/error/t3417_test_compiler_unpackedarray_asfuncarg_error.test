## -*- mode:ulam -*-
#=t3417_test_compiler_unpackedarray_asfuncarg_error
#!
##
##./A.ulam:3:10: ERROR: Function Definition parameter 1, type: Int(32)[10] requires UNPACKED array support.
##./A.ulam:6:2: ERROR: Function Definition <func2> return type: Int(32)[10] requires UNPACKED array support.
##./A.ulam:14:15: ERROR: Lefthand side of equals requires UNPACKED array support <site>, type: Int(32)[10].
##./A.ulam:14:15: ERROR: Righthand side of equals requires UNPACKED array support <func2>, type: Int(32)[10].
##./A.ulam:15:23: ERROR: Incompatible (nonscalar) types Int(32)[10] and Int(32)[10] for binary operator+ ; Suggest writing a loop.
##./A.ulam:16:14: ERROR: Function Definition parameter 1, type: Int(32)[10] requires UNPACKED array support.
##
Exit status: 10
Ue_A { System s();  typedef Int(32) BigSite[10];  Int(32) test() {  Int(32) site[10];  { Int(32) i;  i 0 = i 10 < cond { site i [] i = s ( site i [] )print . } _1: i 1 += while } 10 return } }
Uq_System { <NOMAIN> }
#>A.ulam
element A {
typedef Int BigSite[10];
Int func(BigSite sarr) {
 return sarr[9];
}
 BigSite func2() {
 BigSite s;
for(Int i = 0; i < 10; ++i){
 s[i] = i;
}
 return s;
}
 Int test(){
 BigSite site = func2();
 BigSite site2 = site + site2;
 return func(site);
 }
 }
##
##      //bool rtn1 = fms->add("A.ulam","element A {\ntypedef Int BigSite[10];\nInt test(){\n BigSite site, site2; site = site2;\n return 2;\n }\n }\n");
#.
