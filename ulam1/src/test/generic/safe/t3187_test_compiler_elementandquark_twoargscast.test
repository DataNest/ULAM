## -*- mode:ulam -*-
#=t3187_test_compiler_elementandquark_twoargscast
#!
##      //36 saturates to 31; NO LONGER!!
Exit status: 36
Ue_Foo { System s();  Int(32) m_idx(40);  Int(6) m_x(9);  Int(6) m_y(4);  Int(32) test() {  m_x 9 cast = m_y 4 cast = m_idx ( m_x cast m_y cast )func = s ( m_idx )print . s ( m_x cast m_y cast * )print . m_x cast m_y cast * cast return } }
Uq_C2D { Int(6) m_width(0);  Int(6) m_height(0);  <NOMAIN> }
Uq_System { <NOMAIN> }
#>Foo.ulam
ulam 1;
 use C2D;
use System;
 element Foo {
System s;
 Int m_idx;
 Int(6) m_x, m_y;
 Int func(Int i, Int j) {
 C2D c;
  c.init(i,j);
 return c.getIndex(0,0);
 }
 Int test() {
 m_x = 9;
 m_y = 4;
  m_idx = func((Int) m_x,(Int) m_y);
s.print(m_idx);
s.print((Int) m_x * m_y);
 return (m_x * m_y);
 }
 }

##
##      //note: getIndex calculation done as Int(32) since args are Ints.
#:C2D.ulam
quark C2D {
 Int(6) m_width;
 Int(6) m_height;
  Void init(Int x, Int y) {
 m_width = (Int(6)) x;
 m_height = (Int(6)) y;
 return;
 }
 Void init() {
 m_width = 9;
 m_height = 4;
 return;
 /* event window overload */ }
 Int getIndex(Int a, Int b){
 return ((m_height-b) * m_width + (m_height-a));
 }
 }
#:System.ulam
ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
