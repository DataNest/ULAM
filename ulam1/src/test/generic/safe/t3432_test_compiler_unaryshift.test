## -*- mode:ulam -*-
#=t3432_test_compiler_unaryshift
#!
##      /* gen code output:
##	 Unary(3) Arg: 0x2
##	 Unary(3) Arg: 0x2
##      */
Exit status: 0
Ue_A { System s();  Unary(3) u(2);  Unary(3) v(2);  Int(32) test() {  v 3u cast = u v cast cast 1 cast << cast = v v cast 1 cast >> cast = s ( u )print . s ( v )print . 0 cast return } }
Uq_System { <NOMAIN> }
##
##      // cast to Bits and cast back to Unary(3): 3 >> 1 = 2   3 << 1 = 2
##      //conversion to unsigned then shift then back to unary. so, 3 << 1 saturates at 3; 3 >> 1 = 1;
#>A.ulam
use System;
element A {
System s;
Unary(3) u, v;
 Int test() {
 v = 3u;
 u = (Unary(3)) (v << 1);
 v = (Unary(3)) (v >> 1);
 s.print(u);
 s.print(v);
 return 0;
 }
 }

#:System.ulam
ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
