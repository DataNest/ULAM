## -*- mode:ulam -*-
#=t3484_test_compiler_elementandquark_caarray_ambiguousfunc_issue
#!
Exit status: -11
Ue_EventWindowTest { typedef Unsigned(6) SiteNum;  EventWindow ew( typedef Unsigned(6) SiteNum; );  Int(32) test() {  Unsigned(6) s = 6 cast;  Atom(96) a = ew s [];  1 cast return } }
Uq_EventWindow { typedef Unsigned(6) SiteNum;  <NOMAIN> }
Uq_C2D { Int(6) m_width(0);  Int(6) m_height(0);  <NOMAIN> }
##
##      //informed by t3413, and issue/afterTypeSelect/combination.
##
#>EventWindowTest.ulam
  ulam 1;
element EventWindowTest {
  typedef EventWindow.SiteNum SiteNum;
  EventWindow ew;
  Int test() {
    SiteNum s = 6;
    Atom a = ew[s];
    return 1;
  }
}
use EventWindow;

#:EventWindow.ulam
  ulam 1;
use C2D;
quark EventWindow {
  typedef Unsigned(6) SiteNum;
  Atom aref(Int index) native;
  Atom aref(SiteNum index){
    return aref((Int) index);
  }
  Atom aref(C2D coord){
    C2D c;
    return aref(c.getIndex(coord));}
  Void aset(Int index, Atom v) native;
}
#:C2D.ulam
  ulam 1;
quark C2D {
  Int(6) m_width;
  Int(6) m_height;
  Void init(Int x, Int y) {
    m_width = (Int(6)) x;
    m_height = (Int(6)) y;
    return;
  }
 Void init() {
   m_width = 9;
   m_height = 4;
   return;
   /* event window overload */ }
 Int getIndex(Int a, Int b){
   return ((m_height-b) * m_width + (m_height-a));
 }
 Int getIndex(C2D coord){
   return getIndex(coord.m_width, coord.m_height);
 }
}
#.
